#include <bits/stdc++.h>
using namespace std;
#ifndef ONLINE_JUDGE
#include "E:\CP\Debugger\debugger.h"
#else 
#define debug(x...)
#endif
#define int long long
#define FIO ios_base::sync_with_stdio(false); cin.tie(NULL);
#define TC int tc; cin>>tc; for(int cn=1; cn<=tc; ++cn) 

const int mx = 101;
vector<int> adj[mx];
int cost[mx][mx] = {}, ans, tot;
bitset<mx> vis;

void dfs(int node){
    vis[node] = true;

    // debug(node);
    for(int child=0; child<adj[node].size(); ++child)
    {   
        if(cost[node][adj[node][child]] == 0)
        {   
            // debug(cost[ adj[node][child] ][node]);
            ans += cost[ adj[node][child] ][node];
            tot += cost[ adj[node][child] ][node];
            cost[adj[node][child]][node] = 0;
        }
        else 
            tot += cost[node][ adj[node][child]],
            cost[node][adj[node][child]] = 0;
        
        debug(adj[node][child]);
        if(!vis[adj[node][child]])
            dfs(adj[node][child]);
    }
}
signed main(){
    FIO TC{
        int n; cin>>n;

        for(int i=0; i<n; ++i){
            int a, b, c; cin>>a>>b>>c;
            cost[a][b] = c;
            adj[a].push_back(b);
            adj[b].push_back(a);
        }

        dfs(1);
        cout<<"Case "<<cn<<": "<<min(ans, tot-ans)<<"\n";

        ans = 0, tot = 0;
        for(int i=0; i<mx; ++i)adj[i].clear();
        memset(cost, 0, sizeof cost);
        vis.reset();
    }
    return 0;
}
